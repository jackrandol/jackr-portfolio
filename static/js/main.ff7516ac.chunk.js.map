{"version":3,"sources":["assets/about.jpg","assets/contact.jpg","assets/projects.jpg","assets/CV.jpg","Home.js","HomeScene.js","About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","withRouter","props","useEffect","meshClickCallback","scene","THREE","camera","window","innerWidth","innerHeight","position","z","renderer","alpha","setSize","document","querySelector","appendChild","domElement","light","add","light2","loader","boxGeometry","boxMaterial","sphereGeometry","sphereMaterial","torusGeometry","torusMaterial","CustomSinCurve","scale","call","this","undefined","prototype","Object","create","constructor","getPoint","t","tx","ty","Math","sin","PI","multiplyScalar","path","tubeGeometry","tubeMaterial","map","load","contactImage","aboutImage","cvImage","projectImage","contact","about","cv","projects","x","y","bounceControl","meshArray","upArray","rightArray","Interaction","on","cursor","addEventListener","aspect","updateProjectionMatrix","pause","getElementById","onclick","console","log","innerHTML","animate","requestAnimationFrame","i","length","rotation","translateOnAxis","normalize","render","HomeScene","mesh","history","push","className","id","About","AppWithRouter","exact","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ff7516ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/about.a8ea7693.jpg\";","module.exports = __webpack_public_path__ + \"static/media/contact.bcd6dca8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/projects.5ac8ca04.jpg\";","module.exports = __webpack_public_path__ + \"static/media/CV.374987ab.jpg\";","import React, { useEffect } from \"react\";\n// import ComingSoonScene from \"./ComingSoonScene\";\nimport HomeScene from \"./HomeScene\";\n\nimport { withRouter } from \"react-router-dom\";\n\nfunction Home(props) {\n  useEffect(() => {\n    const meshClickCallback = (mesh) => {\n      console.log(\"clicked\", mesh);\n      props.history.push(\"/About\");\n    };\n\n    HomeScene(meshClickCallback);\n  });\n\n  return (\n    <>\n      <div className=\"sceneAbout\"></div>\n      <div className=\"pauseButton\" id=\"pauseButton\">\n        PAUSE\n      </div>\n    </>\n  );\n}\n\nexport default withRouter(Home);\n","import * as THREE from \"three\";\nimport aboutImage from \"./assets/about.jpg\";\nimport contactImage from \"./assets/contact.jpg\";\nimport projectImage from \"./assets/projects.jpg\";\nimport cvImage from \"./assets/CV.jpg\";\n\nimport { Interaction } from \"three.interaction\";\n\nexport default function homeScene(meshClickCallback) {\n  var scene = new THREE.Scene();\n  var camera = new THREE.PerspectiveCamera(\n    75,\n    window.innerWidth / window.innerHeight,\n    1,\n    10000\n  );\n  camera.position.z = 1000;\n\n  var renderer = new THREE.WebGLRenderer({ alpha: true });\n\n  renderer.setSize(window.innerWidth, window.innerHeight);\n\n  let canvasElement = document.querySelector(\".sceneAbout\");\n  canvasElement.appendChild(renderer.domElement);\n\n  var light = new THREE.AmbientLight(0xffffff);\n  scene.add(light);\n\n  var light2 = new THREE.PointLight(0xf800, 0.2);\n  scene.add(light2);\n  var loader = new THREE.TextureLoader();\n\n  var boxGeometry = new THREE.BoxGeometry(200, 200, 200);\n  var boxMaterial = new THREE.MeshPhongMaterial();\n\n  var sphereGeometry = new THREE.SphereBufferGeometry(200, 40, 32);\n  var sphereMaterial = new THREE.MeshPhongMaterial({});\n\n  var torusGeometry = new THREE.TorusBufferGeometry(150, 70, 25, 100);\n  var torusMaterial = new THREE.MeshBasicMaterial();\n\n  //// this is all to map a curve ////////////////\n  CustomSinCurve.prototype = Object.create(THREE.Curve.prototype);\n  CustomSinCurve.prototype.constructor = CustomSinCurve;\n\n  CustomSinCurve.prototype.getPoint = function (t) {\n    var tx = t * 3 - 1.5;\n    var ty = Math.sin(1 * Math.PI * t);\n    var tz = 0;\n\n    return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\n  };\n  function CustomSinCurve(scale) {\n    THREE.Curve.call(this);\n\n    this.scale = scale === undefined ? 1 : scale;\n  }\n\n  var path = new CustomSinCurve(180);\n  //////////////////////////////////////////////\n\n  var tubeGeometry = new THREE.TubeBufferGeometry(path, 200, 70, 30, false);\n  var tubeMaterial = new THREE.MeshBasicMaterial();\n\n  sphereMaterial.map = loader.load(contactImage);\n  boxMaterial.map = loader.load(aboutImage);\n  torusMaterial.map = loader.load(cvImage);\n  tubeMaterial.map = loader.load(projectImage);\n\n  var contact = new THREE.Mesh(sphereGeometry, sphereMaterial);\n  var about = new THREE.Mesh(boxGeometry, boxMaterial);\n  var cv = new THREE.Mesh(torusGeometry, torusMaterial);\n  var projects = new THREE.Mesh(tubeGeometry, tubeMaterial);\n\n  scene.add(about);\n  scene.add(contact);\n  scene.add(cv);\n  scene.add(projects);\n\n  about.position.x = 100;\n  about.position.y = -550;\n  contact.position.x = 200;\n  contact.position.y = 300;\n  cv.position.x = -500;\n  cv.position.y = -300;\n  projects.position.y = 500;\n  projects.position.x = -800;\n\n  let bounceControl = true;\n  let meshArray = [about, contact, cv, projects];\n  let upArray = [true, true];\n  let rightArray = [true, true];\n\n  let animate = () => {\n    requestAnimationFrame(animate);\n    for (var i = 0; i < meshArray.length; i++) {\n      meshArray[i].rotation.y += 0.01;\n      meshArray[i].rotation.x += 0.01;\n      if (bounceControl) {\n        meshArray[i].rotation.x = 0;\n        meshArray[i].rotation.y = 0;\n        if (upArray[i]) {\n          meshArray[i].translateOnAxis(\n            new THREE.Vector3(0, 1, 0).normalize(),\n            3\n          );\n          if (meshArray[i].position.y > window.innerHeight) {\n            upArray[i] = false;\n          }\n        } else if (!upArray[i]) {\n          meshArray[i].translateOnAxis(\n            new THREE.Vector3(0, 1, 0).normalize(),\n            -3\n          );\n          if (meshArray[i].position.y < -window.innerHeight) {\n            upArray[i] = true;\n          }\n        }\n\n        if (rightArray[i]) {\n          meshArray[i].translateOnAxis(\n            new THREE.Vector3(1, 0, 0).normalize(),\n            4\n          );\n          if (meshArray[i].position.x > window.innerWidth) {\n            rightArray[i] = false;\n          }\n        } else if (!rightArray[i]) {\n          meshArray[i].translateOnAxis(\n            new THREE.Vector3(1, 0, 0).normalize(),\n            -4\n          );\n          if (meshArray[i].position.x < -window.innerWidth) {\n            rightArray[i] = true;\n          }\n        }\n        if (!bounceControl) {\n          meshArray[i].position(0, 0, 0);\n        }\n      }\n    }\n    renderer.render(scene, camera);\n  };\n\n  const interaction = new Interaction(renderer, scene, camera);\n\n  about.on(\"click\", () => {\n    meshClickCallback(\"about\");\n  });\n\n  cv.on(\"click\", () => {\n    meshClickCallback(\"about\");\n  });\n\n  contact.on(\"click\", () => {\n    meshClickCallback(\"about\");\n  });\n\n  projects.on(\"click\", () => {\n    meshClickCallback(\"about\");\n  });\n\n  about.cursor = \"crosshair\";\n  cv.cursor = \"crosshair\";\n  contact.cursor = \"crosshair\";\n  projects.cursor = \"crosshair\";\n\n  window.addEventListener(\"resize\", onWindowResize, false);\n  function onWindowResize() {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n\n  let pause = document.getElementById(\"pauseButton\");\n  pause.onclick = () => {\n    console.log(\"pause clicked\");\n    if (bounceControl === true) {\n      bounceControl = false;\n      pause.innerHTML = \"PLAY\";\n    } else {\n      bounceControl = true;\n      pause.innerHTML = \"PAUSE\";\n    }\n  };\n  animate();\n}\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <>\n      <p className=\"about\">About Page</p>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport { Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route exact path=\"/\" render={() => <Home />} />\n      <Route exact path=\"/About\" render={() => <About />} />\n    </div>\n  );\n}\n\nconst AppWithRouter = withRouter(App);\n\nexport default AppWithRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppWithRouter from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <AppWithRouter />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}